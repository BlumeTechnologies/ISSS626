{
  "hash": "45b31a4978e7ffaf87c82c0ee4b1ad30",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-Class_Exercise 1\"\nauthor: \"Pelle Knegjes\"\ndate: \"Aug 26 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n---\n\n\nBonjour! Welcome to the in-class exercise of week 1\n\nFirst, we load the tidyverse, sf, tmap, and ggstatsplot packages\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, sf, tmap, ggstatsplot)\n```\n:::\n\n\nThen, we import singapore's masterplan 2014 subzone data: \n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz14_shp = st_read(dsn = \"data/MP2014SZ\", \n                  layer = \"MP14_SUBZONE_WEB_PL\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MP14_SUBZONE_WEB_PL' from data source \n  `C:\\BlumeTechnologies\\ISSS626\\In-Class_Exercise\\In-Class_Exercise01\\data\\MP2014SZ' \n  using driver `ESRI Shapefile'\nSimple feature collection with 323 features and 15 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 2667.538 ymin: 15748.72 xmax: 56396.44 ymax: 50256.33\nProjected CRS: SVY21\n```\n\n\n:::\n:::\n\nFollowing this, we fix a kml file\n\n\n::: {.cell}\n\n```{.r .cell-code}\nst_write(mpsz14_shp,\n         \"data/MP14_SUBZONE_WEB_PL.KML\",\n         delete_dsn = TRUE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDeleting source `data/MP14_SUBZONE_WEB_PL.KML' using driver `KML'\nWriting layer `MP14_SUBZONE_WEB_PL' to data source \n  `data/MP14_SUBZONE_WEB_PL.KML' using driver `KML'\nWriting 323 features with 15 fields and geometry type Multi Polygon.\n```\n\n\n:::\n:::\n\nAfter this, we import the 2019 version of the master plan.\n\nFirst, a kml version to see how \"un\"tidy the data set is compared to the next.\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_kml = st_read(\"data/MasterPlan2019SubzoneBoundaryNoSeaKML.kml\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `URA_MP19_SUBZONE_NO_SEA_PL' from data source \n  `C:\\BlumeTechnologies\\ISSS626\\In-Class_Exercise\\In-Class_Exercise01\\data\\MasterPlan2019SubzoneBoundaryNoSeaKML.kml' \n  using driver `KML'\nSimple feature collection with 332 features and 2 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY, XYZ\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nz_range:       zmin: 0 zmax: 0\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nWhich is the shp version of the 2019 Master Plan which will show a tidy data set.\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp = st_read(\"data/MPSZ-2019.shp\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\BlumeTechnologies\\ISSS626\\In-Class_Exercise\\In-Class_Exercise01\\data\\MPSZ-2019.shp' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nFor analytics we always use projected coordinate systems (PCS)\n\nthat's why we need to transform the data to PCS\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmpsz19_shp = st_read(dsn = \"data/\",\n                     layer = \"MPSZ-2019\") %>%\n  st_transform(crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `MPSZ-2019' from data source \n  `C:\\BlumeTechnologies\\ISSS626\\In-Class_Exercise\\In-Class_Exercise01\\data' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\nAlso to add to the code you can use %>% to glue multiple functions together.\n\n\n\nsomething data processing should be 15 instead of 12 (rowsums should be 15 and then 7:13\n",
    "supporting": [
      "In-Class_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}